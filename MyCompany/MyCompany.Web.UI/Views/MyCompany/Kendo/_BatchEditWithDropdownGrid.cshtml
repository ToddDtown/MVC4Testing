@using MyCompany.Web.Mvc.Models
@model KendoModel

@(Html.Kendo().Grid<Customer>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.Id).Width(20);
        columns.Bound(c => c.FirstName).Width(100);
        columns.Bound(c => c.LastName).Width(100);

        columns.Bound(c => c.Generation)
            .EditorTemplateName("_GenerationList")
            .Title("Generation")
            .ClientTemplate("#:Generation#")
            .Width(100);

        //columns.Bound(c => c.Generation)
        //    .Template(c => c.Generation)
        //    .ClientTemplate(
        //        Html.Kendo().DropDownList()
        //            .Name("GenerationsDropDown")
        //            .BindTo(Model.Generations)
        //            .ToClientTemplate()
        //            .ToHtmlString()
        //    );
        
        columns.Bound(c => c.IsActive).ClientTemplate("<input type='checkbox' value='#= IsActive #' " +
                                                      "# if (IsActive) { #" +
                                                      "checked='checked'" +
                                                      "# } #" +
                                                      "/>").Width(30).Title("Active");
        columns.Command(command => command.Destroy()).Width(90);
    })
    .ToolBar(toolBar =>
        {
            toolBar.Create();
            toolBar.Save();
        })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Sortable()
    .Navigatable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .ServerOperation(false)
        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(c => c.Id);
            model.Field(c => c.Id).Editable(false);
        })
        .PageSize(20)
        .Read(read => read.Action("Editing_Read", "Kendo"))
        .Create(create => create.Action("EditingCustom_Create", "Kendo"))
        .Update(update => update.Action("EditingCustom_Update", "Kendo"))
        .Destroy(destroy => destroy.Action("EditingCustom_Destroy", "Kendo"))
    )
)
